/* liteUploader v3.0.0 | https://github.com/burt202/lite-uploader | Aaron Burtnyk (http://www.burtdev.net) */
function LiteUploader(t,e,i,r){this.options=this._applyDefaults(t),this.ref=e,this._getFiles=i,this._triggerEvent=r,this.xhrs=[]}$.fn.liteUploader=function(t){return this.each(function(){var e=function(){return $(this).get(0).files}.bind(this);$.data(this,"liteUploader",new LiteUploader(t,$(this).attr("name"),e,$(this).trigger.bind($(this))))})},window.LiteUploader=LiteUploader,LiteUploader.prototype={_applyDefaults:function(t){return $.extend({script:null,rules:{allowedFileTypes:null,maxSize:null},params:{},headers:{},singleFileUploads:!1,beforeRequest:function(t,e){return $.when(e)}},t)},_validateOptionsAndFiles:function(){var t=this._getFiles(),e=this._getGeneralErrors(t);e||(e=this._getFileErrors(t)),e?this._triggerEvent("lu:errors",e):(this._triggerEvent("lu:start",t),this._startUploadWithFiles(t))},_startUploadWithFiles:function(t){this.options.singleFileUploads?$.each(t,function(e){this._beforeUpload([t[e]])}.bind(this)):this._beforeUpload(t)},_beforeUpload:function(t){this._triggerEvent("lu:before",t),this.options.beforeRequest(t,this._collateFormData(t)).done(this._performUpload.bind(this))},_getGeneralErrors:function(t){var e=[],i=[];return this.ref||e.push({type:"refRequired"}),this.options.script||e.push({type:"scriptOptionRequired"}),0===t.length&&e.push({type:"noFilesSelected"}),i.push({name:"_general",errors:e}),e.length>0?[i]:null},_getFileErrors:function(t){var e=0,i=[];return $.each(t,function(r){var n=this._findErrorsForFile(t[r]);i.push({name:t[r].name,errors:n}),e+=n.length}.bind(this)),e>0?[i]:null},_findErrorsForFile:function(t){var e=[];return $.each(this.options.rules,function(i,r){"allowedFileTypes"===i&&r&&!this._isAllowedFileType(r,t.type)&&e.push({type:"type",rule:r,given:t.type}),"maxSize"===i&&r&&t.size>r&&e.push({type:"size",rule:r,given:t.size})}.bind(this)),e},_isAllowedFileType:function(t,e){var i=t.split(","),r=/\/\*$/;return-1!==$.inArray(e,i)?!0:i.reduce(function(t,i){return t||r.test(i)?t||0===e.indexOf(i.substring(0,i.length-1)):t||!1},!1)},_getFormDataObject:function(){return new FormData},_collateFormData:function(t){var e=this._getFormDataObject();return $.each(this.options.params,function(t,i){e.append(t,i)}),$.each(t,function(i){e.append(this.ref,t[i])}.bind(this)),e},_getXmlHttpRequestObject:function(){return new XMLHttpRequest},_buildXhrObject:function(){var t=this._getXmlHttpRequestObject();return t.upload.addEventListener("progress",this._onXHRProgress.bind(this),!1),this.xhrs.push(t),t},_performUpload:function(t){$.ajax({xhr:this._buildXhrObject.bind(this),url:this.options.script,type:"POST",data:t,headers:this.options.headers,processData:!1,contentType:!1}).done(this._onXHRSuccess.bind(this)).fail(this._onXHRFailure.bind(this))},_onXHRProgress:function(t){t.lengthComputable&&this._triggerEvent("lu:progress",Math.floor(t.loaded/t.total*100))},_onXHRSuccess:function(t){this._triggerEvent("lu:success",t)},_onXHRFailure:function(t){this._triggerEvent("lu:fail",t)},startUpload:function(){this._validateOptionsAndFiles()},addParam:function(t,e){this.options.params[t]=e},cancelUpload:function(){this.xhrs.forEach(function(t){t.abort()}),this._triggerEvent("lu:cancelled")}};